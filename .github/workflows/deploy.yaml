name: CI/CD - Build and Deploy to GKE

on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: project-gcp-468607
  CLUSTER_NAME: velath
  CLUSTER_LOCATION: us-central1-a
  NAMESPACE: production
  AR_LOCATION: us-central1
  AR_REPO: artirepo
  IMAGE_NAME: sample-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: auth
        name: Authenticate to GCP (Workload Identity)
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: 'projects/237760814620/locations/global/workloadIdentityPools/github-pool-2/providers/github-provider'
          service_account: 'github-actions-sa@project-gcp-468607.iam.gserviceaccount.com'
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker to use gcloud as credential helper
        run: |
          gcloud auth configure-docker ${{ env.AR_LOCATION }}-docker.pkg.dev

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        env:
          IMAGE_URI: ${{ env.AR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO }}/${{ env.IMAGE_NAME }}
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_URI }}:${{ github.sha }}
            ${{ env.IMAGE_URI }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - id: getcreds
        name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v3
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          location: ${{ env.CLUSTER_LOCATION }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Deploy Helm chart
        env:
          IMAGE_TAG: ${{ github.sha }}
          IMAGE: ${{ env.AR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO }}/${{ env.IMAGE_NAME }}
        run: |
          # ensure namespace exists
          kubectl create namespace $NAMESPACE --dry-run=client -o yaml | kubectl apply -f -
          
          # helm upgrade (pass image tag so chart is immutable)
          cd app/
          helm upgrade --install app charts/sample-app \
            --namespace $NAMESPACE \
            --set image.repository=${IMAGE} \
            --set image.tag=${IMAGE_TAG} \
            --wait --timeout 5m