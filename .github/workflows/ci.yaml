name: CI - build & push

on:
  push:
    branches: [ "main", "develop" ]
  pull_request: {}

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: project-gcp-468607
  AR_LOCATION: us-central1            # region of Artifact Registry
  AR_REPO: microrepo
  IMAGE_NAME: sample-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: 'auth'
        name: 'Authenticate to GCP (Workload Identity)'
        uses: google-github-actions/auth@v3
        with:
          workload_identity_provider: 'projects/237760814620/locations/global/workloadIdentityPools/github-pool/providers/github-provider' # REPLACE with WIF_PROVIDER
          service_account: 'github-actions-sa@project-gcp-468607.iam.gserviceaccount.com' # REPLACE with SA_EMAIL
          token_format: 'access_token'
          project_id: ${{ env.PROJECT_ID }}

      - name: "Configure registry variables"
        run: |
          echo "REGISTRY=${{ env.AR_LOCATION }}-docker.pkg.dev" >> $GITHUB_ENV
          echo "IMAGE=${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.AR_REPO }}/${{ env.IMAGE_NAME }}" >> $GITHUB_ENV

      - name: Login to Artifact Registry (Docker)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ github.sha }}
            ${{ env.IMAGE }}:latest
          cache-from: type=registry,ref=${{ env.IMAGE }}:latest
          cache-to: type=inline

      - name: Set image-tag output
        id: settag
        run: echo "::set-output name=image::${{ env.IMAGE }}:${{ github.sha }}"
